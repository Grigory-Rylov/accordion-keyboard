#include "boards/shields/accordion_keyboard/mouse.dtsi"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

//  ##########################################################
//  ###########        WORKING 2023/07/1       ###############
//  ##########################################################
// #############         LAYERS         #################

#define SYM_L   1
#define NAV_L   2
#define NAV2_L  3

//#define OTHER_L 4

#define DEFAULT 0
#define ALPHA  1
#define NAVIGATION   2
#define NUMBERS   3
#define MOUSE  4
#define SYMBOLS 5
#define HOTKEYS  6

// Desktop and tab navigation shortcuts		

#define DESKTOP_LT   LC(LG(LEFT))
#define DESKTOP_RT   LC(LG(RIGHT))
#define WINDOW_LT    LA(LS(TAB))
#define WINDOW_RT    LA(TAB)
#define TAB_LT       LC(LS(TAB))
#define TAB_RT       LC(TAB)

// NOT USED  &kp LG(LC(LEFT))  &kp LG(LC(RIGHT))
// Generic bindings

#define KILL_WINDOW  LA(F4)
#define MAXIMIZE     LG(UP)
#define MINIMIZE     LG(DOWN)
#define UN_MINIMIZE  LG(LC(N))

&mt {
    flavor = "hold-preferred";
    tapping-term-ms = <500>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <300>;
};

&sl { release-after-ms = <2000>; };

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };

    macros {
        ZMK_MACRO(inv_qm,

        wait-ms = <10>;
        tap-ms = <10>;
        bindings =
            <&macro_press &kp LALT>,
            <&macro_tap &kp KP_N1 &kp KP_N6 &kp KP_N8>,
            <&macro_release &kp LALT>;

        )
    };

    combos {
        compatible = "zmk,combos";

        combo_boot {
            timeout-ms = <50>;
            key-positions = <30 32 33 35>;
            bindings = <&bootloader>;
        };
    };

    behaviors {
        //   td_mt_ls: tap_dance_mod_tap {
        //       compatible = "zmk,behavior-tap-dance";
        //       label = "TAP_DANCE_LSHIFT";
        //       #binding-cells = <0>;
        //       tapping-term-ms = <200>;
        //       bindings = <&mt LSHIFT CAPSLOCK>, <&kp LCTRL>;
        //   };
        //   td_mt_rs: tap_dance_mod_tap {
        //       compatible = "zmk,behavior-tap-dance";
        //       label = "TAP_DANCE_RSHIFT";
        //       #binding-cells = <0>;
        //       tapping-term-ms = <200>;
        //       bindings = <&mt RSHIFT CAPSLOCK>, <&kp RCTRL>;
        //   };            
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp E         &kp R         &kp T         &kp Y                 &kp U            &kp I         &kp O       &kp P
&kp A  &kp S  &kp D         &kp F         &kp G         &kp H                 &kp J            &kp K         &kp L       &kp SEMICOLON
&kp Z  &kp X  &kp X         &kp V         &kp B         &kp N                 &kp M            &kp COMMA     &kp PERIOD  &kp SLASH
              &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &lt NAVIGATION SPACE  &lt MOUSE ENTER  &kp NUMBER_4
            >;
        };

        ALPHA {
            bindings = <
&kp Q  &kp W  &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp J                  &kp Y       &none          &none    &none  &none
&none  &kp Z  &kp X                 &kp B              &kp SLASH              &mt LGUI I  &kp SEMICOLON  &none    &none  &none
&none  &none  &kp LEFT_PARENTHESIS  &kp LG(SPACE)      &kp RIGHT_PARENTHESIS  &kp GRAVE   &kp COMMA      &kp DOT  &none  &none
              &none                 &none              &none                  &none       &none          &none
            >;
        };

        NAVIGATION {
            bindings = <
&kp BACKSPACE  &none        &kp TAB         &kp COMMA  &kp UP_ARROW    &kp PERIOD        &none            &none              &none  &none
&none          &mo SYMBOLS  &kp LEFT_SHIFT  &kp ENTER  &kp LEFT_ARROW  &kp DOWN_ARROW    &kp RIGHT_ARROW  &none              &none  &none
&none          &none        &kp HOME        &none      &kp END         &kp LEFT_BRACKET  &kp SQT          &kp RIGHT_BRACKET  &none  &none
                            &none           &none      &none           &none             &none            &none
            >;
        };

        NUMBERS {
            bindings = <
&kp LBKT  &none      &kp UNDERSCORE  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none         &none         &none  &none
&none     &kp MINUS  &kp LEFT_SHIFT  &kp PLUS      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &none         &none  &none
&none     &none      &kp LSHFT       &kp EQUAL     &kp N0        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none  &none
                     &none           &none         &none         &none         &none         &none
            >;
        };

        MOUSE {
            bindings = <
&none  &none      &none  &none  &none   &none       &none    &none  &none  &none &none
&none  &none      &none  &none  &none   &none       &none    &none  &none  &none &none
&none  &none      &none  &none  &none   &none       &none    &none  &none  &none &none
&none            &none           &none              &none           &none            &none
            >;
        };

        SYMBOLS {
            bindings = <
&kp LBKT  &kp Q      &kp W      &kp E  &kp R  &kp T  &none  &none  &none  &none
&none     &kp LCTRL  &kp A      &kp S  &kp D  &kp F  &kp G  &none  &none  &none
&none     &none      &kp LSHFT  &kp Z  &kp X  &kp C  &kp V  &kp B  &none  &none
                     &none      &none  &none  &none  &none  &none
            >;
        };

        HOTKEYS {
            bindings = <
&none  &none  &bt BT_PRV  &none       &kp RIGHT_ALT  &none     &none              &none   &none  &none
&none  &none  &kp TAB     &bt BT_CLR  &none          &kp RGUI  &kp RIGHT_CONTROL  &none   &none  &none
&none  &none  &none       &none       &bt BT_NXT     &none     &none              &none   &none  &none
              &none       &none       &none          &trans    &trans             &trans
            >;
        };
    };
};
